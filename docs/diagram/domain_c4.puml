@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
LAYOUT_WITH_LEGEND()
title Декомпозиция ограниченных контекстов ядра
System_Boundary(c1, "Монолит ядра") {
    System(constructor, "Конструктор бизнес-процессов","Создает, хранит и обеспечивает бизнес процессы")
    System(userbase, "Сервис пользователей и прав", "Хранит контекст пользователя и выдает права на просмотр и модификацию")
    System(market, "Магазин модулей", "Содержит открытый набор модулей и позволяет добавить их в текущую конфигурацию")
    System(lifeplatform, "Сервис жизнедеятельности модулей", "Запускает и останавливает сервисы, обеспечивает конфигурацию топиков")
    System(dataplatform, "Сервис баз данных", "Сохраняет информацию модулей под их ярлыком. Единообразное хранилище данных")
    System(messagequeues, "Контроллер обмена сообщениями", "Поднимает и содержит необходимые топики, сообщает об ошибках")
    System(businessprocessor, "Обработчик бизнес процессов", "Обрабатывает сообщения бизнес-процессов, сопоставляет и исполняет синхронные условия")
    System(analyticsserver, "Сервис аналитики и дашбордов", "Собирает информацию из бизнес-процессов, обрабатывает информацию")
    System(frontend, "Платформа фротенда", "Обращается к сервисам за конфигурацией и отображает пользовательский интерфейс")
    System(interface, "Сервис инициатора бизнес-процессов", "Обращается к сервисам за конфигурацией и отображает пользовательский интерфейс")
}

System_Boundary(c2, "Подключаемый модуль") {
    System_Ext(platform, "Сконфигурированная платформа модуля", "Обрабатывает внутренние процессы")
}

Person(admin, "Администратор")
Person(viewer, "Наблюдатель", "Пользователь с ограниченными правами")
Person(member, "Участник", "Участник бизнес-процесса")

Rel(admin, constructor, "Создает бизнес процессы и модифицирует их")
Rel(viewer, analyticsserver, "Обращается за информацией")
Rel(member, interface, "Взаимодействует с системой")

Rel(businessprocessor, dataplatform, "Сохраняет персистентые данные из бизнес-процесса")
Rel(dataplatform, businessprocessor, "Ищет данные для бизнес-процесса по ключу")
Rel(lifeplatform, messagequeues, "Задает конфигурацию потоков данных")
Rel(lifeplatform, constructor, "Запрашивает конфигурацию модулей")
Rel(market, constructor, "Сохраняет информацию о доступных модулях")
Rel(constructor, userbase, "Обращается за правами и доступными пользователями")
Rel(businessprocessor, messagequeues, "Создает события после обработки этапа")
Rel(messagequeues, businessprocessor, "Потребляет события и обрабатывает их в порядке очереди")
Rel(frontend, analyticsserver, "Собирает аналитику")
Rel(frontend, lifeplatform, "Собирает информацию о работе сервисов")
Rel(frontend, constructor, "Взаимодействует с информацией о бизнес-процессах")
Rel(frontend, interface, "Взаимодействует и создает события")
Rel(interface, messagequeues, "Производит события по расписанию или ручным способом")

Rel(platform, messagequeues, "Производит и потребляет события")
Rel(platform, dataplatform, "Сохраняет и запрашивает необходимые данные")
Rel(lifeplatform, c2, "Поднимает и содержит модуль")
@enduml
