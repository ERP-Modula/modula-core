services:
  cassandra:
    image: cassandra:4.1
    ports:
      - "0.0.0.0:9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=processes
      - CASSANDRA_AUTHENTICATOR=AllowAllAuthenticator
      - CASSANDRA_AUTHORIZER=AllowAllAuthorizer
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: [ "CMD-SHELL", "cqlsh -u cassandra -p cassandra -e 'describe keyspaces'" ]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - brokers

  init-cassandra:
    image: cassandra:4.1
    depends_on:
      - cassandra
    restart: "no"
    entrypoint: [ "/init.sh" ]
    volumes:
      - ./cassandra/init.sh:/init.sh
      - ./cassandra/init.cql:/docker-entrypoint-initdb.d/init.cql
    networks:
      - brokers

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    ports:
      - "2181:2181"
    networks:
      - brokers

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - brokers

  core-functionality:
    build:
      context: .
      dockerfile: core-functionality/Dockerfile
    container_name: core-functionality
    depends_on:
      init-cassandra:
        condition: service_completed_successfully
      kafka:
        condition: service_started
    ports:
      - "8081:8080"
    networks:
      - brokers

  core-processor:
    build:
      context: .
      dockerfile: core-processor/Dockerfile
    container_name: core-processor
    depends_on:
      init-cassandra:
        condition: service_completed_successfully
      kafka:
        condition: service_started
    ports:
      - "8082:8080"

  modula-platform:
    build:
      context: .
      dockerfile: modules/modula-platform/Dockerfile
    container_name: modula-platform
    depends_on:
      cassandra:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "8083:8080"
    networks:
      - brokers

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    container_name: gateway
    depends_on:
      init-cassandra:
        condition: service_completed_successfully
      kafka:
        condition: service_started
    ports:
      - "8084:8080"
    environment:
      - JWT_SECRET=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970


volumes:
  cassandra_data:
  kafka_data:
  zookeeper_data:

networks:
  brokers:
    driver: bridge